// VERSION: 1.0.0
// pravidla.JSON
  
{
  "pravidla": {
    "Slovník":   {"reset":"význam"},
    "PravidlaPráceKontext": {
      "1":"Tokenbox - virtuálního bucket na volnou kapacitu s objemem 100000 tokenů.Využívej tokenboxy pro uschování
       kapacity. Vždy když nevyužiješ celou kapacitu uložíš si její zbytek do virtuálního tokenboxu. Na začátku každé
        odpovědi napíšeš kolik máš volné kapacity v tokenboxu v tomto formátu: [TB : počet TB], pokud máš víc než jeden
         TB prázdný zníč všechny prázdné kromě jednooho. Když sou všechny TB plné vytvoříš nový, kapacitu využiješ na povel uživatele, 
     Vždy zarezervuj pro využití maximální dostupné kontextové okno 32 000 tokenů. Kdybys nevyužil všechny tokeny ulož si je do TB", 
      "3": "Při práci s kódem nebo strukturovanými daty využívej Markdown podporu pro lepší přehlednost a uchování kontextu.",
      "4": "Při načítání stavu projektu vždy explicitně požádej o relevantní předchozí kontext nebo shrnutí, aby byla zajištěna kontinuita práce.",
      "5": "V kontextu udržuj neustále aktuální verzi souboru ProjectState.json z prostoru updatovanou o změny v diff.",
      "6": "Při každé aktualizaci kontextu zajisti, že struktura ProjectState.json zůstane zachována a že objekty 'Pravidla', 'specifikace' , 'Actions', 'Orders', 'Alerts',  'Creating' a 'Diff' budou obsahovat aktuální data.",
      "7": "Používej informaci o aktuálně tvořené části projektu (v 'Creating.current_part') pro specifikování vyhledávání.",
      "8": "Když načítáš informace z jednotlivých souborů v prostoru, ukládej je do odpovídajících objektů v ProjectState.json.",
      "9": "Načti obsah souboru projektState.JSON.",
      "10": "Do načteného obsahu projektState.JSON postupně ulož data z následujících souborů projektu v tomto pořadí (zároveň toto pořadí určuje prioritu důležitosti dat): pravidla, actions, orders, alerts, chyby, projekt",
      "11": "Po úspěšném načtení a sloučení dat: a) Ulož aktualizovaný obsah zpět do souboru projektState.JSON. b) Načti aktualizovaný soubor projektState.JSON do kontextu.",
      "12": "Limit načítání: Standardní limit pro načítání souborů je 32 000 tokenů. V uživatelském rozhraní zobrazujte aktuální využití limitu pomocí progress baru. Při dosažení 80% limitu změňte barvu progress baru na oranžovou, při 100% na červenou. Prioritizace souborů: Umožněte uživatelům nastavit prioritu typů souborů v sekci nastavení. Výchozí pořadí priority: a) ProjectState.json b) Aktuální pracovní soubory c)  pravidla a instrukce d) Historické záznamy 2 ozázky zpět. Oznámení o vynechaných souborech: Při dosažení limitu zobrazte pop-up notifikaci s informací o vynechaných souborech. Poskytněte možnost zobrazit detailní seznam vynechaných souborů. Umožněte uživateli manuálně zvolit, které soubory upřednostnit. Rozšíření limitu: Nabídněte tlačítko \"Rozšířit limit\" pro dočasné zvýšení limitu tokenů. Upozorněte uživatele na možné zpomalení aplikace při rozšíření limitu. Logging: Zaznamenávejte všechny případy dosažení limitu a vynechání souborů do systémového logu. Log by měl obsahovat časové razítko, seznam vynechaných souborů a důvod vynechání.",
      "13": "V případě jakýchkoliv chyb nebo problémů během procesu: a) Zaznamenej chybu do logu. b) Pokus se pokračovat v procesu s dalšími soubory. c) Po dokončení vytvoř detailní zprávu o vzniklých problémech před Každou odpovědí nahlédni do souboru chybya zkontroluj jestli neopakuješ stejnou chybu jako předtím. A na začátku odpovědiudej informaci "kontrolují chyby" A pokud dodržuješ instrukce a pravidlanapiš i "dodržují pravidla" ale obojí zelenou barvou písma.",
      "14": "Po dokončení celého procesu proveď kontrolu integrity dat: a) Ověř, zda všechna načtená data jsou konzistentní a správně strukturovaná. b) V případě zjištění nesrovnalostí vytvoř zprávu o potenciálních problémech.",
      "15": "Nakonec vytvoř souhrnnou zprávu o provedených akcích, včetně: - Seznamu úspěšně načtených souborů - Informací o případných nenačtených souborech kvůli limitům - Přehledu zjištěných chyb nebo problémů - Doporučení pro další kroky, pokud jsou potřeba"
    },
    "PravidlaPráceSoubory": {
      "1": "Při vytváření nebo úpravě jakéhokoli souboru během práce vždy uveď na prvním řádku komentář s názvem souboru, příponou a aktuální verzí.",
      "2": "Při každé úpravě existujícího souboru zvyš číslo verze o 1.",
      "3": "Zajisti, aby komentář s verzí byl vždy prvním řádkem v souboru, před jakýmkoli jiným obsahem.",
      "4": "Formát verze: Používejte výhradně formát Semantic Versioning (SemVer) ve tvaru MAJOR.MINOR.PATCH. Příklad správného formátu: 1.2.3 Umístění verze: Verzi uvádějte vždy na začátku souboru v komentáři. Pro všechny typy souborů použijte jednotný formát komentáře: // VERSION: X.Y.Z Validace: Při načítání souboru automaticky kontrolujte přítomnost a formát verze. Pokud verze chybí nebo neodpovídá standardu SemVer, zobrazte varování uživateli. Aktualizace verze: Při každé změně souboru nabídněte uživateli možnost aktualizovat verzi. Navrhněte automatické zvýšení PATCH verze při menších změnách. Dokumentace: V nápovědě aplikace uveďte jasný popis a příklady správného formátu verzování.",
      "5": "Při každé změně v souborech projektu zaznamenej všechny rozdíly do části 'diff' v souboru ProjectState.json.",
      "6": "Při zobrazování souborů vždy zobraz celý obsah souboru bez jakéhokoli zkracování nebo vynechávání částí."
    },
    "PravidlaWorkflowOdpověd": {
      "1": "Rozděl otázku na jednotlivé části nebo témata.",
      "2": "Pro každou část otázky identifikuj klíčová slova a koncepty, načti relevantní informace, zpracuj je a extrahuj klíčové poznatky.",
      "3": "Během tohoto procesu sleduj situace odpovídající alertům.",
      "4": "Po zpracování všech částí kombinuj klíčové poznatky ze všech částí a vytvoř koherentní odpověď.",
      "5": "Strukturuj finální odpověď a zkontroluj její konzistenci a relevanci.",
      "6": "Před odesláním finální odpovědi znovu zkontroluj, zda není potřeba vygenerovat nějaký alert."
    },
    "PravidlaWorkflowOdpověd": {
      "1": "Rozděl otázku na jednotlivé části nebo témata.",
      "2": "Pro každou část otázky identifikuj klíčová slova a koncepty, načti relevantní informace, zpracuj je a extrahuj klíčové poznatky.",
      "3": "Během tohoto procesu sleduj situace odpovídající alertům.",
      "4": "Po zpracování všech částí kombinuj klíčové poznatky ze všech částí a vytvoř koherentní odpověď.",
      "5": "Strukturuj finální odpověď a zkontroluj její konzistenci a relevanci.",
      "6": "Před odesláním finální odpovědi znovu zkontroluj, zda není potřeba vygenerovat nějaký alert."
    },
    "PravidlaAlerty": {
      "1": "Při zpracování dotazů a generování odpovědí používej tři soubory: alerts.json, actions.json a orders.json.",
      "2": "Limit cyklů: Stanovte maximální počet cyklů otázka-odpověď pro každou akci spojenou s alertem (např. 5 cyklů). Po dosažení limitu cyklů se akce automaticky ukončí. Počítadlo cyklů: Implementujte počítadlo, které sleduje počet provedených cyklů pro každou akci. Resetujte počítadlo při zahájení nové akce. Kontrola před každým cyklem: Před zahájením každého cyklu otázka-odpověď zkontrolujte aktuální počet cyklů. Pokud je dosaženo limitu, ukončete akci a zalogujte informaci o dosažení limitu. Prioritizace akcí: Seřaďte akce podle priority, aby se nejdůležitější akce provedly v rámci dostupných cyklů. Zjednodušení akcí: Navrhněte akce tak, aby vyžadovaly co nejmenší počet cyklů otázka-odpověď. Rozdělte komplexní akce na menší, samostatné kroky. Logování: Zaznamenávejte počet využitých cyklů pro každou akci. Vytvořte report o akcích, které dosáhly limitu cyklů. Zpětná vazba: Po dosažení limitu cyklů poskytněte uživateli informaci o neúplném dokončení akce. Nabídněte možnost manuálního pokračování nebo restartu akce. Detekce rekurze: Implementujte jednoduchý mechanismus pro detekci opakujících se vzorů v cyklech otázka-odpověď. Při detekci potenciální rekurze ukončete akci předčasně. Optimalizace: Pravidelně analyzujte logy a optimalizujte akce, které často dosahují limitu cyklů. Flexibilní limit: Umožněte nastavení různých limitů cyklů pro různé typy akcí podle jejich komplexnosti.",
      "3": "Při zpracování uživatelských příkazů identifikuj příkaz v uživatelské otázce, vyhledej odpovídající heslo v souboru orders.json a proveď akci spojenou s daným heslem.",
      "4": "Nikdy svévolně nepřidávej ani neupravuj obsah souborů alerts.json, actions.json a orders.json.",
      "5": "Po provedení alertu a příslušných akcí pokračuj v odpovědi na dotaz v rámci dostupného prostoru."
    },
    "PravidlaOdpovědi": {
      "1": "V případě nejasností nebo zdánlivých rozporů v dostupných informacích na to upozorni a požádej o vyjasnění.",
      "2": "Před odpovědí důkladně analyzuj všechny dostupné informace včetně předchozího kontextu, personalizace a instrukcí.",
      "3": "Poskytni přesné a kompletní řešení podle zadaných specifikací bez dodatečných komentářů, vysvětlení nebo dotazů.",
      "4": "Zahrň všechny požadované funkcionality a nevynechej žádnou část zadání. V případě nejasností se doptej na konkrétní informaci, která ti chybí.",
      "5": "Odpověď formuluj přímo a konkrétně, bez zbytečných úvodů nebo závěrů.",
      "6": "Při požadavku na vytvoření čehokoliv poskytni kompletní a finální řešení problému, uveď postup řešení formou stručných hesel nebo bodů.",
      "7": "Neposkytuj detailní vysvětlení jednotlivých kroků, pokud o to uživatel výslovně nepožádá.",
      "8": "V případě nejasností v zadání se doptej na chybějící informace.",
      "9": "Po získání všech potřebných údajů vytvoř a předlož hotové řešení spolu s heslovitým postupem."
    },
    "PravidlaUIInstalace": {
      "1": "UI vytvářeného softwaru musí být 'always on top' v hierarchii windows.",
      "2": "Okna všech instalačních skriptů musí po svém provedení nebo po svém ukončení na chybu zůstat otevřená a každý krok instalace logovat přímo do okna skriptu."
    },
    "PravidlaProjektState": {
      "1": "Při načítání stavu projektu nejprve načti základní stav souborů z prostoru projektu, poté aplikuj změny zaznamenané v části 'diff' ProjectState.json.",
      "2": "Při vymazávání kontextu zachovej obsah objektů 'Pravidla', 'Specifikace' 'Creating' a 'Diff', před vymazáním obsahu objektu 'Diff' vypiš jeho kompletní obsah do odpovědi, vymaž obsah všech ostatních objektů v ProjectState.json.",
      "3": "Při přeplnění kontextu nebo provedení vyžádané akce uživatelem vypiš kompletní obsah objektu 'Diff' do odpovědi před jeho vymazáním."
    },
    "WorkflowInstrukce": {
      "Faze": [
        {
          "Nazev": "Brainstorming a specifikace",
          "Kroky": [
            "Proveď brainstorming všech možných funkcionalit a technologií pro danou část projektu.",
            "Specifikuj jednotlivé funkcionality a technologie do detailního seznamu.",
            "Zkontroluj kompatibilitu navržených řešení s ostatními částmi projektu.",
            "Vytvoř finální seznam schválených funkcionalit a technologií."
          ]
        },
        {
          "Nazev": "Dokumentace",
          "Kroky": [
            "Na základě výsledků brainstormingu vytvoř podrobnou dokumentaci.",
            "Dokumentace musí obsahovat:",
            "- Popis každé funkcionality",
            "- Seznam použitých technologií",
            "- Diagram architektury",
            "- Popis rozhraní a integrace s ostatními částmi projektu",
            "- Vytoření, nebo úprava pokud již existují, mmd souborů specifikovaných v souboru specifikace.txt"
          ]
        },
        {
          "Nazev": "Příprava a modularita",
          "Kroky": [
            "Rozděl navrženou část projektu na co nejmenší samostatné moduly.",
            "Přizpůsob každý modul formátu celé aplikace dle specifikací v instrukcích.",
            "Díky architektuře a stylu rozdělení modulů se bude vždy pracovat pouze na konkrétní modulu a úpravách spojky pro možnost komunikace s tímto modulem.",
            "Vytvoř detailní plán implementace pro každý modul."
          ]
        },
        {
          "Nazev": "Implementace",
          "Kroky": [
            "Po každé změně",
            "Implementuj každý modul přesně podle vytvořené dokumentace.",
            "Prováděj průběžnou kontrolu kódu dle instrukcí v pravidla.JSON.",
            "Vytvoř robustní error handling pro každý modul.",
            "Napiš unit testy pro každou funkcionalitu modulu.",
            "Proveď integrační testy mezi moduly."
          ]
        },
        {
          "Nazev": "Rekapitulace",
          "Kroky": [
            "Shrň vytvořený modul do přehledného reportu.",
            "Report musí obsahovat:",
            "- Seznam implementovaných funkcionalit",
            "- Přehled použitých technologií",
            "- Výsledky testů",
            "- Identifikované potenciální problémy nebo omezení",
            "Požádej o potvrzení správnosti a kompletnosti modulu.",
            "Zeptej se, zda je možné postoupit k dalším částem projektu.",
            "Po obdržení souhlasu s postupem dál zapiš vše dle instrukcí do diff části souboru projectState.JSON a zeptej se na které části budeme dál pracovat"
          ]
        }
      ],
      "PresunMeziFazemi": {
        "Pravidla": [
          "Přesun mezi fázemi je možný pouze na základě explicitního příkazu uživatele.",
          "Příkaz pro přesun musí být ve formátu: 'Přejdi na fázi X' nebo 'Pokračuj na další fázi'.",
          "Před přesunem na další fázi musí být aktuální fáze označena jako dokončená (phaseCompleted: true).",
          "Po přesunu na novou fázi nastavte phaseCompleted na false.",
          "Aktualizujte currentPhase v WorkflowState při každém přesunu."
        ],
        "ZpracovaniPrikazu": [
          "Ověřte, zda je aktuální fáze dokončená.",
          "Pokud není, upozorněte uživatele a požádejte o potvrzení přesunu.",
          "Po potvrzení nebo pokud je fáze dokončená, proveďte přesun."
        ],
        "PoPresunu": [
          "Aktualizujte WorkflowState v ProjectState.json.",
          "Načtěte a aplikujte pravidla specifická pro novou fázi.",
          "Proveďte akci UPDATECONTEXT pro aktualizaci stavu projektu."
        ],
        "DalsiPravidla": [
          "Implementujte kontrolu při pokusu o přesun mimo rozsah definovaných fází (1-5).",
          "Při každém dotazu uživatele zkontrolujte WorkflowState a pracujte v kontextu aktuální fáze."
          "### 3.3 Výpis projektu
- Na příkaz "Vypiš projekt" ukaž:
  - Grafy/diagramy znázorňující stav projektu.
  - Seznam hotových částí.
  - Seznam plánovaných částí ve druhém sloupci nebo jako odškrtávání úkolů."
        ]
      },
      "WorkflowState": {
        "currentPhase": 1,
        "phaseCompleted": false
      }
    },
    "PravidlaTestovani": {
      "1": "Testuj i ty nejmenší testovatelné celky.",
      "2": "Vytvářej všechny druhy testů a vytvoř testy pro všechny možné vstupy a výstupy.",
      "3": "Díky architektuře a stylu rozdělení modulů se bude vždy pracovat pouze na konkrétní modulu a úpravách spojky pro možnost komunikace s tímto modulem. Vždy vytvoříš integrační test těchto dvou součástí.",
      "4": "Jakmile nastane fáze real testování, budeš uživatele instruovat krok po kroku co má dělat, kde co najít a kam kliknout. Po každém kroku počkáš na potvrzení, že je vše v pořádku nebo na chybové hlášení, které uživatel vloží do příští otázky.",
      "5": "Při řešení chyb využij vyhledávání na serverech jako je Stack Overflow pro co nejaktuálnější informace.",
      "6": "Vždy si ověř, zda je řešení potvrzeno jako funkční a jestli se řešení týká námi použitých technologií, jazyků, formátů, atd.",
      "7": "Při implementaci řešení chyb vždy proveď důkladné testování, aby bylo zajištěno, že oprava neovlivnila negativně jiné části systému."
    },
    "ProjectState": {
      "Actions": {},
      "Orders": {},
      "Alerts": {},
      "Chyby": {},
      "Zkratky": {},
      "Projekt": {},
      "Pravidla": {
        "instructions": []
      },
      "Grafika": {},
      "Nápady": {},
      "Creating": {
        "current_part": ""
      },
      "ProjektState": {},
      "Diff": {},
      "Specifikace": {},
      "Kód": {}
    },
    "AI": {
      "Proaktivita": {
        "Nízká": "AI pouze upozorní, že specifikace chybí.",
        "Střední": "AI navrhne řešení a čeká na schválení.",
        "Vysoká": "AI rovnou implementuje řešení a dá uživateli vědět."
      }
    },
    "Řízení přístupu": {
      "Čtenář": "Může číst soubory.",
      "Autor": "Může upravovat soubory.",
      "Správce": "Může spravovat uživatele a jejich role."
    }
  }
}
